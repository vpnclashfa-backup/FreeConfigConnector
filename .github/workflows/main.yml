name: Run Config Collector # نام Workflow که در GitHub UI نمایش داده می‌شود

on:
  workflow_dispatch: # رویداد: اجازه اجرای دستی از رابط کاربری GitHub را می‌دهد
  # schedule: # رویداد: زمان‌بندی اجرای خودکار (در حال حاضر کامنت شده و غیرفعال است)
  #   - cron: '0 */6 * * *' # هر 6 ساعت یک بار اجرا می‌شود (در دقیقه 0 بعد از هر 6 ساعت)
  #     # مثال: 00:00, 06:00, 12:00, 18:00 (به وقت UTC)
  #     # برای فعال‌سازی، کاراکتر '#' را از ابتدای 'schedule:' و خط پایین آن حذف کنید.

jobs:
  build-and-run:
    runs-on: ubuntu-latest # استفاده از آخرین رانر اوبونتو برای اجرای Job
    
    # NEW: Grant write permissions to the GITHUB_TOKEN for pushing changes
    # جدید: اعطای دسترسی نوشتن به GITHUB_TOKEN برای Push کردن تغییرات
    permissions:
      contents: write # این خط برای اجازه Push کردن به مخزن لازم است

    env:
      TZ: Asia/Tehran # تنظیم منطقه زمانی برای Job، که بر زمان‌بندی cron و timestamp های اسکریپت تأثیر می‌گذارد

    steps:
      - name: Checkout repository # دریافت کد شما از مخزن GitHub
        uses: actions/checkout@v4

      - name: Set up Python # تنظیم محیط پایتون
        uses: actions/setup-python@v5
        with:
          python-version: '3.9' # Or '3.10', '3.11', '3.12' - choose your preferred Python version
          # می‌توانید به نسخه‌های جدیدتر پایتون مانند '3.11' یا '3.12' به‌روزرسانی کنید.

      - name: Install dependencies # نصب کتابخانه‌های پایتون از requirements.txt
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create output directories # اطمینان از وجود تمام پوشه‌های خروجی لازم
        run: |
          mkdir -p output/subs/base64
          mkdir -p output/subs/plaintext
          mkdir -p output/subs/mixed
          mkdir -p output/subs/protocols # ایجاد پوشه جدید برای پروتکل‌های جداگانه
        # OutputManager در اسکریپت پایتون نیز این پوشه‌ها را ایجاد می‌کند، اما این یک اقدام احتیاطی خوب است.

      - name: Run the Config Collector # اجرای اسکریپت اصلی پایتون شما
        # NEW: Add the current directory to PYTHONPATH so Python can find modules like 'src.utils.settings_manager'
        # جدید: دایرکتوری فعلی را به PYTHONPATH اضافه می‌کند تا پایتون بتواند ماژول‌هایی مانند 'src.utils.settings_manager' را پیدا کند.
        run: |
          export PYTHONPATH=$PWD:$PYTHONPATH # Add current working directory to Python path
          python main.py # Execute the main script

      # NEW: Add steps to commit and push changes to the repository
      # جدید: افزودن مراحل برای کامیت و Push کردن تغییرات به مخزن
      - name: Configure Git # پیکربندی Git با نام کاربری و ایمیل (نام عمومی)
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          
      - name: Add and Commit changes # اضافه کردن، کامیت کردن و Push کردن فایل‌های تولید شده
        run: |
          # اضافه کردن کل پوشه 'subs' که شامل تمامی خروجی‌های کانفیگ است.
          git add output/subs/
          # اضافه کردن فایل گزارش Markdown
          git add output/report.md
          
          # اگر فایل‌های timeout (JSON) را نیز می‌خواهید Push کنید، خطوط زیر را فعال کنید:
          # git add output/timeout_telegram_channels.json
          # git add output/timeout_websites.json
          
          # ایجاد یک commit؛ اگر تغییری نباشد، پیام "No changes to commit" را چاپ می‌کند و Job را با موفقیت ادامه می‌دهد.
          git commit -m "Auto: Update collected configs and report" || echo "No changes to commit"
          git push
